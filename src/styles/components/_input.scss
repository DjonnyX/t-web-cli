@import "../base/reset-input";
@import "../utils/px2em";
@import "../abstracts/vars";
@import "../abstracts/colors";

$input-color-normal: $color-normal;
$input-color-focus: $color-selected;
$input-color-warn: $color-warn;
$input-caret-color: $color-selected;
$input-placeholder-color-focus: $color-selected;
$input-placeholder-color-normal: rgba($color-text-main, 0.47);

$ease: cubic-bezier(0.5, 0, 0.5, 1);
$animation-placeholder: 0.4s $ease;
$animation-border: 0.2s $ease;

$border-width: px2em(1, $base-content-size);
$border-width-focus: px2em(2, $base-content-size);
$border-sub: $border-width-focus - $border-width;

$t-input-font-size: px2em(16, $base-content-size);
$t-input-line-height: px2em(24, $base-content-size);
$t-input-height: px2em(54, $base-content-size);
$t-input-padding-v: ($t-input-height - $t-input-line-height) * 0.5;
$t-input-padding-h: px2em(16, $base-content-size);
$t-input-padding-v-focus: ($t-input-height - $t-input-line-height) * 0.5;
$t-input-padding-h-focus: px2em(16, $base-content-size);

// placeholder
$t-placeholder-focus-scale: 0.75;
$t-placeholder-line-height: px2em(16, $base-content-size);
$t-placeholder-padding-h: px2em(5, $base-content-size) *
  $t-placeholder-focus-scale;
$t-placeholder-padding-v: ($t-input-height - $t-placeholder-line-height) * 0.5;
$t-placeholder-padding-v-focus: $t-placeholder-padding-v /
  $t-placeholder-focus-scale;

// focused height
$t-placeholder-height-focus: $t-placeholder-line-height *
  $t-placeholder-focus-scale;

$t-caret-y: -($t-input-height - $t-placeholder-line-height) * 0.5;

// normal
$t-placeholder-y: 0;

// focused
$t-placeholder-focus-y: -($t-input-height - $t-placeholder-height-focus * 0.5) * 0.5;

$t-margin-top: px2em(12, $base-content-size);
$t-input-radius: px2em(8, $base-content-size);

// the maintainer class is currently in conflict with dynamic className properties
.t-input {
  border-radius: $t-input-radius;
  margin-top: $t-input-padding-v;
  display: block;
  position: relative;
  background: inherit;
  // margin-top: $t-margin-top;

  input {
    @include reset-input();
    font-size: $t-input-font-size;
    color: inherit;
    /*caret-color: transparent;*/
    z-index: 2;
    margin: 0 $border-sub $border-sub $border-sub;
    line-height: $t-input-height;

    &.focus {
      outline: none;
      margin: 0 $border-sub $border-sub $border-sub;
    }
  }

  /*.t-input__caret {
    position: absolute;
    background: $color-selected;
    width: 2px;
    height: $t-input-line-height;
  }*/

  label {
    border-radius: $t-input-radius;
    border: $border-width solid $input-color-normal;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    height: $t-input-height;
    width: 100%;
    background: inherit;
    padding-left: $t-input-padding-h;
    padding-right: $t-input-padding-h;
    margin: 0 $border-sub;
  }

  .t-input__placeholder {
    pointer-events: none;
    color: $input-color-focus;
    position: absolute;
    left: $t-input-padding-h;
    transition: transform $animation-placeholder,
      background-color $animation-placeholder;
    transform: translateY($t-placeholder-y);
    transform-origin: 0 0;
    padding-left: $t-placeholder-padding-h;
    padding-right: $t-placeholder-padding-h;
    background: none;
    z-index: 1;

    &.focus,
    &.full {
      transform: translateY($t-placeholder-focus-y) scale(0.8);
      background: inherit;
    }
  }

  &.focus {
    margin-top: $t-input-padding-v-focus;

    .t-input__placeholder {
      color: $input-placeholder-color-focus;
    }

    label {
      margin: 0;
      border-width: $border-width-focus;
      border-color: $input-color-focus;
      transition: border-color $animation-border;
      padding-left: $t-input-padding-h-focus;
      padding-right: $t-input-padding-h-focus;
    }
  }

  &:not(.focus) {
    border-color: $input-color-normal;

    .t-input__placeholder {
      color: $input-placeholder-color-normal;
    }
  }
}
